<?php
//*****************************************************************************
//*****************************************************************************
/**
 * WS2812 Node Core Buffer Trait
 *
 * @package         Cclark61\RPi\WS2812
 * @subpackage      Traits\Node\Core
 * @author          Christian J. Clark
 * @copyright       Christian J. Clark
 * @link            https://github.com/cclark61/php-rpi-ws2812
 **/
//*****************************************************************************
//*****************************************************************************

namespace Cclark61\RPi\WS2812\Traits\Node\Core;

trait Buffer
{
    //=========================================================================
    // Class Members
    //=========================================================================
    protected $buffer = [];

    //=========================================================================
    //=========================================================================
    // Buffer Command (i.e. Add to Buffer)
    //=========================================================================
    //=========================================================================
    public function BufferCommand(String $cmd)
    {
        //---------------------------------------------------------------------
        // Command cannot be empty
        //---------------------------------------------------------------------
        if (!$cmd) {
            return false;
        }

        //---------------------------------------------------------------------
        // Check that command ends in ';'
        //---------------------------------------------------------------------
        if (substr($cmd, strlen($cmd) - 1, 1) != ';') {
            $cmd .= ';';
        }

        //---------------------------------------------------------------------
        // Add to Buffer. Return true for success.
        //---------------------------------------------------------------------
        $this->buffer[] = $cmd;
        return true;
    }

    //=========================================================================
    //=========================================================================
    // Get Buffer Contents
    //=========================================================================
    //=========================================================================
    public function GetBufferContents()
    {
        return $this->buffer;
    }

    //=========================================================================
    //=========================================================================
    // Clear Buffer
    //=========================================================================
    //=========================================================================
    public function ClearBuffer()
    {
        $this->buffer = [];
    }

    //=========================================================================
    //=========================================================================
    // Write Buffer
    //=========================================================================
    //=========================================================================
    public function WriteBuffer()
    {
        $cmd = implode('', $this->buffer);
        $this->buffer = [];
        return fwrite($this->node_socket, $cmd);
    }

}
