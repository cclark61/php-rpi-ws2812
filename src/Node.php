<?php
//*****************************************************************************
//*****************************************************************************
/**
 * WS2812 Node Class
 *
 * @package         Cclark61\RPi\WS2812
 * @author          Christian J. Clark
 * @copyright       Christian J. Clark
 * @link            https://github.com/cclark61/php-rpi-ws2812
 **/
//*****************************************************************************
//*****************************************************************************

namespace Cclark61\RPi\WS2812;

class Node
{
    //=========================================================================
    // Class Members
    //=========================================================================
    protected $config = false;
    protected $node_socket = false;

    //=========================================================================
    //=========================================================================
    // Constructor
    //=========================================================================
    //=========================================================================
    public function __construct($args='default')
    {
        //---------------------------------------------------------------------
        // Get Configuration
        //---------------------------------------------------------------------
        $this->config = Config\Node::GetConfig($args);
        if (!$this->config) {
            die("[!!] Invalid node configurarion.\n");
        }

        //---------------------------------------------------------------------
        // Initiate Node
        //---------------------------------------------------------------------
        $this->InitiateNode($this->config);
    }

    //=========================================================================
    //=========================================================================
    // Destructor
    //=========================================================================
    //=========================================================================
    public function __destruct()
    {
        //---------------------------------------------------------------------
        // Turn Off LEDs
        //---------------------------------------------------------------------
        $this->ClearPanel();

        //---------------------------------------------------------------------
        // Close Socket
        //---------------------------------------------------------------------
        if ($this->node_socket) {
            fclose($this->node_socket);
        }
    }

    //=========================================================================
    //=========================================================================
    // Node Is Valid?
    //=========================================================================
    //=========================================================================
    public function IsValid()
    {
        return ($config && $node_socket);
    }

    //=========================================================================
    //=========================================================================
    // Clear Panel (Turn Off)
    //=========================================================================
    //=========================================================================
    public function ClearPanel()
    {
        $data = "reset;setup 1,32;init;fill 1,000000;render;"
        fwrite($this->node_socket, $data);
    }

    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Internal Methods
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    //=========================================================================
    //=========================================================================
    // Initiate Node
    //=========================================================================
    //=========================================================================
    protected function InitiateNode(Array $config)
    {
        $sock = fsockopen($config['ip_addr'], $config['port']);
        if (!$sock) {
            die("[!!] Failed to open remote connection to node.\n");
        }
        $this->node_socket = $sock;
        return true;
    }
}
